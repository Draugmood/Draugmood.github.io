name: Build Game with Pygbag and publish to GitHub pages
on:
  push:
    branches:
      - main
  workflow_dispatch:
permissions:
  contents: write
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Main Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper diff comparisons

    - name: Checkout App 2 Repository
      uses: actions/checkout@v4
      with:
        repository: Draugmood/TopDownECS
        token: ${{ secrets.PAT }}
        path: app2
        ref: master  # Ensure we are checking out the master branch
        fetch-depth: 0  # Fetch all history for proper diff comparisons

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install pygbag
      run: python -m pip install pygbag

    - name: Determine Changed Files
      id: changes
      run: |
        git fetch origin main
        CHANGED_FILES=$(git diff --name-only origin/main HEAD)
        git -C $GITHUB_WORKSPACE/app2 fetch origin master
        CHANGED_FILES_APP2=$(git -C $GITHUB_WORKSPACE/app2 diff --name-only origin/master HEAD)
        echo "CHANGED_FILES=${CHANGED_FILES}" >> $GITHUB_ENV
        echo "CHANGED_FILES_APP2=${CHANGED_FILES_APP2}" >> $GITHUB_ENV
        echo "Changed files in main repo: ${CHANGED_FILES}"
        echo "Changed files in app2 repo: ${CHANGED_FILES_APP2}"

    - name: Build and Deploy App 1
      if: env.CHANGED_FILES
      run: |
        echo "Building App 1..."
        mkdir -p $GITHUB_WORKSPACE/build/app1
        python -m pygbag --template $GITHUB_WORKSPACE/pygbag/template.tmpl $GITHUB_WORKSPACE/main.py
        echo "App 1 built."
        mv $GITHUB_WORKSPACE/main.py-web/* $GITHUB_WORKSPACE/build/app1

    - name: Build and Deploy App 2
      if: env.CHANGED_FILES_APP2
      run: |
        echo "Building App 2..."
        mkdir -p $GITHUB_WORKSPACE/build/app2
        python -m pygbag --template $GITHUB_WORKSPACE/pygbag/template.tmpl $GITHUB_WORKSPACE/app2/main.py
        echo "App 2 built."
        mv $GITHUB_WORKSPACE/app2/main.py-web/* $GITHUB_WORKSPACE/build/app2

    - name: Create Build Directory if Missing
      run: mkdir -p $GITHUB_WORKSPACE/build

    - name: Copy Landing Page
      run: cp $GITHUB_WORKSPACE/index.html $GITHUB_WORKSPACE/build

    - name: List Build Directory
      run: ls -R $GITHUB_WORKSPACE/build

    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: gh-pages
        folder: build
        clean: true
        force: true
